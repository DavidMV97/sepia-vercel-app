{"version":3,"file":"main.js","mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;;;;;;;AAOwG;AACxG;;;AClJ+H;;AAE/H;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,iFAAiF;AAC/F;AACA,wDAAwD,UAAU;AAClE;AACA,MAAM,YAAY;AAClB;AACA,MAAM,WAAW;AACjB;AACA,MAAM,aAAa;AACnB;AACA,MAAM,aAAa;AACnB;AACA,MAAM,UAAU;AAChB;AACA,MAAM,QAAQ;AACd;AACA;;AAEA,MAAM;AACN;AACA;AACA;;AAEA;;;AAGA;;;AAGA,oDAAe,UAAU;;AChDa;;AAEtC;AACA,EAAE,aAAU;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA,CAAC,E;;;;;AC3CD","sources":["webpack://drupaltemecustom/./src/js/utils/templates.js","webpack://drupaltemecustom/./src/js/getDataApi.js","webpack://drupaltemecustom/./src/js/main.js","webpack://drupaltemecustom/./src/sass/style.scss"],"sourcesContent":["const printImg = (object, id , containierDiv) => {\n  let fragment = document.createDocumentFragment(); \n  for(let item of object) {\n    let contiainerImge = document.createElement('div');\n    contiainerImge.classList.add('item-img');\n    let htmImg = document.createElement('img');\n    htmImg.classList.add('img-ralated');\n    htmImg.setAttribute('src' , item[id]); \n    contiainerImge.append(htmImg);\n    fragment.append(contiainerImge); \n  }\n  containierDiv.append(fragment); \n}\n\nconst printDetails = (object, containerDiv) => {\n  let fragment = document.createDocumentFragment(); \n  let fragmentDescription = document.createDocumentFragment(); \n  //contenedor principal\n  let containierDetails = document.createElement('div'); \n  containierDetails.classList.add('container-details');\n  //contenedor titulos\n  let containerTitle = document.createElement('div');\n  containerTitle.classList.add('details-title');\n  //contenedor descripcion \n  let contaierDescription = document.createElement('div');\n  contaierDescription.classList.add('details-description');\n\n  for (let item of object) {\n    let spanTitle = document.createElement('span');\n    let description = document.createElement('p');\n    description.textContent = item.description;  \n    spanTitle.textContent = item.name ; \n    fragment.append(spanTitle);\n    fragmentDescription.append(description); \n  }\n  containerTitle.append(fragment);\n  contaierDescription.append(fragmentDescription);\n  containierDetails.append(containerTitle, contaierDescription); \n  containerDiv.append(containierDetails); \n}\n\nconst printColors = (object, containerDiv) => {\n  let fragment = document.createDocumentFragment(); \n  let containerColors = document.createElement('div');\n  containerColors.classList.add('container-colors');\n  containerColors.innerHTML = '<span>Choose your finis.</span>'  ; \n\n  for (let item of object) {\n    let containerItem = document.createElement('div');\n    containerItem.classList.add('item-color');\n    let nameColor = document.createElement('span');\n    let descriptionColor = document.createElement('p'); \n    descriptionColor.textContent = item.description; \n    nameColor.textContent = item.name ; \n    containerItem.append(nameColor, descriptionColor);\n    fragment.append(containerItem);\n  }\n  containerColors.append(fragment); \n  containerDiv.append(containerColors);\n}\nconst printWarranty = (object, containerDiv) => {\n  let fragment = document.createDocumentFragment(); \n  let containerWarranty = document.createElement('div');\n  containerWarranty.classList.add('container-warranty');\n  containerWarranty.innerHTML = '<span>Would you like to add to extended warranty coverage ? </span>'  ; \n\n  for (let item of object) {\n    let containerItem = document.createElement('div');\n    containerItem.classList.add('container-item');\n    let nameWarranty = document.createElement('span');\n    let descriptionColor = document.createElement('p'); \n    descriptionColor.textContent = item.description; \n    nameWarranty.textContent = item.name ; \n    containerItem.append(nameWarranty, descriptionColor);\n    fragment.append(containerItem);\n  }\n  containerWarranty.append(fragment); \n  containerDiv.append(containerWarranty);\n}\n\nconst printFeatures = (object, containerDiv) => {\n  let fragment = document.createDocumentFragment(); \n  let containerFeatures = document.createElement('div');\n  containerFeatures.classList.add('container-features');\n  containerFeatures.innerHTML = '<span>Features </span>'  ; \n\n  for (let item of object) {\n    let containerItem = document.createElement('div');\n    containerItem.classList.add('container-item');\n    let nameFeatures = document.createElement('span');\n    let descriptionFeatures = document.createElement('p'); \n    \n    descriptionFeatures.textContent = item.additionalValue; \n    nameFeatures.textContent = item.name ; \n    containerItem.append(nameFeatures, descriptionFeatures);\n    fragment.append(containerItem);\n  }\n  containerFeatures.append(fragment); \n  containerDiv.append(containerFeatures);\n}\n\nconst printSpecs = (objet, containerDiv) => {\n  let fragment = document.createDocumentFragment(); \n  let containerSpecs = document.createElement('div');\n  containerSpecs.classList.add('container-specs');\n  containerSpecs.innerHTML = '<span class=\"title\" >Specifications </span>'  ; \n  for( let [key , value] of Object.entries(objet) ){\n    let containerItem = document.createElement('div');\n    containerItem.classList.add('item-specs');\n\n    let name = document.createElement('p');\n    let valueSpec = document.createElement('span');\n    valueSpec.textContent = value; \n    name.textContent = key;\n    containerItem.append(name, valueSpec);\n    fragment.append(containerItem);\n  }\n  containerSpecs.append(fragment);\n  containerDiv.append(containerSpecs); \n}\n\n\n\nconst printTitle = (title, description, price) => {\n  const template = `\n    <div class=\"title-description\">\n        <div class=\"title\"> \n          <span> NEW ELASE </span>\n          <h2> ${title} </h2>\n          <p> ${description} </p>\n        </div>\n        <div class=\"price\">\n          <span>STARTING AT</span>\n          <p> ${price} </p>\n        </div>\n    </div>\n  `;\n  return template;\n};\n\n\n\n\n\n\nexport { printImg , printTitle , printDetails, printColors, printWarranty, printFeatures, printSpecs } ; \n \n","import { printImg, printTitle , printDetails, printColors, printWarranty, printFeatures, printSpecs } from \"./utils/templates\";\n\nconst getDataApi = () => {\n  function getData(enpoint) {\n    return fetch(enpoint)\n      .then((response) => response.json())\n      .then((json) => {\n        return json\n      });\n  }\n\n  async function showData() {\n    try {\n      let ResultData = await getData('https://frontend-interview-api-sepia.vercel.app/api/items');\n      let data = ResultData[0];\n      let descriptionRight = document.querySelector('.description-right');\n      let mainImgLeft = document.querySelector('.related-img');\n      let srcMainImg = document.querySelector('.main-img img'); \n\n      const { title, description, price , details, colors, warranty, features ,specs, images } = data ; \n      //title , price, description\n      descriptionRight.insertAdjacentHTML('beforeend' , printTitle(title, description, price));\n      //details\n      printDetails(details, descriptionRight);\n      //colors\n      printColors(colors, descriptionRight); \n      //warranyt\n      printWarranty(warranty, descriptionRight);\n      //features\n      printFeatures(features, descriptionRight); \n      //specs\n      printSpecs(specs, descriptionRight);\n      //main img left \n      printImg(data.images, 'x1', mainImgLeft);\n      srcMainImg.setAttribute('src', images[0].x1 ); \n      mainImgLeft.firstChild.classList.add('active');\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  showData();\n\n\n}\n\n\nexport default getDataApi;","import getDataApi from './getDataApi'; \n\ndocument.addEventListener('DOMContentLoaded', (e) => {\n  getDataApi(); \n\n  let mainLeftImg = document.querySelector('.main-img-left');\n  console.log(window.innerWidth);\n  document.addEventListener('scroll', event => {\n    //if (window.innerWidth < 768) return ;\n     let top = window.pageYOffset ; \n     if (top > 1) {\n      mainLeftImg.classList.add('fixed');\n     }else{\n       mainLeftImg.classList.remove('fixed');\n     }\n  })\n\n  mainLeftImg.addEventListener('click', (e) => {\n    let target = e.target ; \n    if (target.classList.contains('item-img') ) {\n      let allItems = document.querySelectorAll('.item-img'); \n      let srcMainImg = document.querySelector('.main-img img');\n      let currentImgSrc = target.querySelector('img').getAttribute('src');\n      srcMainImg.setAttribute('src', currentImgSrc);\n      \n      if (target.classList.contains('active')) {\n        target.classList.remove('active');\n      }else{\n        removeActive(allItems);\n        target.classList.add('active');\n      }\n    }\n\n  });\n\n  function removeActive(items) {\n    items.forEach(item => {\n      item.classList.remove('active');\n    });\n    \n  }\n\n\n});","// extracted by mini-css-extract-plugin\nexport {};"],"names":[],"sourceRoot":""}